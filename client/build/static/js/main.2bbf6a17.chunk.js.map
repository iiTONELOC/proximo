{"version":3,"sources":["components/Footer/index.js","utils/auth.js","components/Header/index.js","pages/Home.js","utils/mutations.js","components/Alerts/login/index.js","pages/Login.js","pages/NoMatch.js","utils/queries.js","components/FriendList/index.js","pages/Profile.js","pages/Signup.js","utils/helpers.js","components/Alerts/Sign-up/createError.js","components/MessageForm/index.js","components/Messages/currentUserCard.js","components/Messages/otherMessageCard.js","components/Messages/index.js","pages/Test.js","components/UserList/index.js","components/GlobalChat/index.js","pages/Dashboard.js","pages/Public.js","App.js","serviceWorker.js","index.js"],"names":["navigation","name","href","icon","props","fill","viewBox","fillRule","d","clipRule","Example","className","map","item","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","RenderLinks","Auth","loggedIn","link","to","logout","event","preventDefault","src","alt","onClick","Home","LOGIN_USER","gql","LOGOUT_USER","ADD_USER","LoginAlert","Login","useState","email","password","formState","setFormState","useMutation","login","error","handleChange","target","value","handleFormSubmit","a","variables","data","console","onSubmit","htmlFor","placeholder","type","id","onChange","required","NoMatch","QUERY_USERS","QUERY_ME","FriendList","friendCount","username","friends","length","friend","_id","Profile","userParam","useParams","useQuery","loading","log","user","me","getProfile","addUser","userError","setUserError","emailError","setEmailError","passwordError","setPasswordError","signUpError","setAlert","e","isValid","test","String","toLowerCase","setTimeout","message","MessageForm","socket","setText","characterCount","setCharacterCount","userName","messageData","emit","CurrentUserCard","xmlns","stroke","strokeLinecap","strokeLinejoin","strokeWidth","time","toLocaleTimeString","OtherUsersCard","Messages","messages","setMessages","useEffect","messageListener","prevMessages","newMessages","deleteMessageListener","messageID","on","off","Object","values","sort","b","Test","setSocket","newSocket","io","hostname","close","UserList","UsersInRange","el","idx","online","Public","classNames","classes","filter","Boolean","join","Dashboard","undefined","user_id","GlobeAltIcon","current","HomeIcon","UsersIcon","FolderIcon","CalendarIcon","InboxIcon","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","Signup","isLocalhost","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2bbf6a17.chunk.js","sourcesContent":["const navigation = [\n  {\n    name: 'Facebook',\n    href: '#',\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'Instagram',\n    href: '#',\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'Twitter',\n    href: '#',\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\n      </svg>\n    ),\n  },\n  {\n    name: 'GitHub',\n    href: '#',\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n  {\n    name: 'Dribbble',\n    href: '#',\n    icon: (props) => (\n      <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    ),\n  },\n]\n\nexport default function Example() {\n  return (\n    <footer className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 md:flex md:items-center md:justify-between lg:px-8\">\n        <div className=\"flex justify-center space-x-6 md:order-2\">\n          {navigation.map((item) => (\n            <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\n              <span className=\"sr-only\">{item.name}</span>\n              <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </a>\n          ))}\n        </div>\n        <div className=\"mt-8 md:mt-0 md:order-1\">\n          <p className=\"text-center text-base text-gray-400\">&copy; 2020 Workflow, Inc. All rights reserved.</p>\n        </div>\n      </div>\n    </footer>\n  )\n}","import decode from 'jwt-decode';\n\nclass AuthService {\n    // retrieve data saved in token\n    getProfile() {\n\n        return decode(this.getToken());\n    }\n\n    // check if the user is still logged in\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        // use type coersion to check if token is NOT undefined and the token is NOT expired\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    // check if the token has expired\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else {\n                return false;\n            }\n        } catch (err) {\n            return false;\n        }\n    }\n\n    // retrieve token from localStorage\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    }\n\n    // set token to localStorage and reload page to homepage\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n\n        window.location.assign('/dashboard');\n    }\n\n    // clear token from localStorage and force logout with reload\n    logout() {\n\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n        // this will reload the page and reset the state of the application\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Auth from '../../utils/auth';\n\nconst navigation = [\n  { name: 'Home', href: '/' },\n  { name: 'Dashboard', href: '/dashboard' },\n  { name: 'Test', href: '/test' },\n  { name: 'Public', href: '/public' },\n]\nfunction RenderLinks() {\n  return (\n    Auth.loggedIn() ? navigation.map((link) => (\n      <Link key={link.name} to={link.href} className=\"text-base font-medium text-white hover:text-indigo-50\">\n        {link.name}\n      </Link>\n    )) : null\n  )\n}\nconst logout = event => {\n  event.preventDefault();\n  Auth.logout();\n};\nexport default function Example() {\n  return (\n    <header className=\"bg-indigo-600\">\n      <nav className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\" aria-label=\"Top\">\n        <div className=\"w-full py-6 flex items-center justify-between border-b border-indigo-500 lg:border-none\">\n          <div className=\"flex items-center\">\n            <Link to=\"/\">\n              <span className=\"sr-only\">Proximo</span>\n              <img\n                // INSERT ICON HERE\n                className=\"h-10 w-auto\"\n                src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=white\"\n                alt=\"\"\n              />\n            </Link>\n            <div className=\"hidden ml-10 space-x-8 lg:block\">\n              {RenderLinks()}\n            </div>\n          </div>\n          <div className=\"ml-10 space-x-4\">\n            {!Auth.loggedIn() ? <> <Link\n              to=\"/login\"\n              className=\"inline-block bg-indigo-500 py-2 px-4 border border-transparent rounded-md text-base font-medium text-white hover:bg-opacity-75\"\n            >\n              Sign in\n            </Link>\n              <Link\n                to=\"/signup\"\n                className=\"inline-block bg-white py-2 px-4 border border-transparent rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n              >\n                Sign up\n              </Link> </> : <><a\n                href=\"/\"\n                onClick={logout}\n                className=\"inline-block bg-white py-2 px-4 border border-transparent rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n              >Logout</a> </>}\n          </div>\n        </div>\n        {/* SMALLER SCREEN LAYOUT DONT REMOVE */}\n        <div className=\"py-4 flex flex-wrap justify-center space-x-6 lg:hidden\">\n          {RenderLinks()}\n        </div>\n        {/* SMALLER SCREEN LAYOUT DONT REMOVE */}\n      </nav>\n    </header>\n  )\n}","import React from 'react';\n// import { ExternalLinkIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom';\nimport Auth from '../utils/auth';\nimport Header from '../components/Header'\nexport default function Home() {\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n\n    <section className='w-full h-4/6 flex-row justify-center'>\n      <Header />\n      <div className=\"w-full relative bg-gray-800\">\n        <div className=\"h-56 bg-indigo-600 sm:h-72 md:absolute md:left-0 md:h-full md:w-1/2\">\n          <img\n            className=\"w-full h-full object-cover\"\n            src=\"https://images.unsplash.com/photo-1525130413817-d45c1d127c42?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1920&q=60&blend=6366F1&sat=-100&blend-mode=multiply\"\n            alt=\"\"\n          />\n        </div>\n        <div className=\"relative max-w-7xl mx-auto px-4 py-12 sm:px-6 lg:px-8 lg:py-16\">\n          <div className=\"md:ml-auto md:w-1/2 md:pl-10\">\n            <h2 className=\"text-base font-semibold uppercase tracking-wider text-gray-300\">Award winning support</h2>\n            <p className=\"mt-2 text-white text-3xl font-extrabold tracking-tight sm:text-4xl\">We’re here to help</p>\n            <p className=\"mt-3 text-lg text-gray-300\">\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et, egestas tempus tellus etiam sed. Quam a\n              scelerisque amet ullamcorper eu enim et fermentum, augue. Aliquet amet volutpat quisque ut interdum\n              tincidunt duis.\n            </p>\n            <div className=\"mt-8\">\n              <div className=\"inline-flex rounded-md shadow\">\n                {!Auth.loggedIn() ? <> <Link\n                  to=\"/login\"\n                  className=\"inline-block bg-indigo-500 py-2 px-4 border border-transparent rounded-md text-base font-medium text-white hover:bg-opacity-75\"\n                >\n                  Sign in\n                </Link>\n                  <Link\n                    to=\"/signup\"\n                    className=\"ml-4 inline-block bg-white py-2 px-4 border border-transparent rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n                  >\n                    Sign up\n                  </Link> </> : <><a\n                    href=\"/\"\n                    onClick={logout}\n                    className=\"inline-block bg-white py-2 px-4 border border-transparent rounded-md text-base font-medium text-indigo-600 hover:bg-indigo-50\"\n                  >Logout</a> </>}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n  )\n}","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\nmutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n    }\n    }\n}\n`;\nexport const LOGOUT_USER = gql`\nmutation logout($user_id: ID!){\n  logout(user_id: $user_id){\n    _id\n    username\n    online\n  }\n}\n`;\n\nexport const ADD_USER = gql`\nmutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n    token\n    user {\n        _id\n        username\n        email\n    }\n    }\n}\n`;\n\nexport const ADD_FRIEND = gql`\nmutation addFriend($id: ID!) {\n    addFriend(friendId: $id) {\n    _id\n    username\n    friendCount\n    friends {\n        _id\n        username\n    }\n    }\n}\n`;\n\nexport const SEND_MESSAGE = gql`\nmutation sendMessage($text: String!, $username: String!, $channel: ID!) {\n    sendMessage(text: $text, username: $username, channel: $channel) {\n    _id\n    channels{\n      _id\n      name\n    }\n    text\n    time\n    username\n    }\n}\n`\nexport const JOIN_CHANNEL = gql`\nmutation joinAChannel($user: ID!, $channel: ID!, $privateChannel: Boolean!) {\n   joinAChannel(user: $user, privateChannel: $privateChannel, channel: $channel) {\n    _id\n    name\n    private\n    server{\n      _id\n      name\n    }\n    members{\n      _id\n      username\n      profilePicture\n    }\n    }\n}\n`;\n\nexport const LEAVE_CHANNEL = gql`\nmutation leaveAChannel($user: ID!, $channel: ID!) {\n   leaveAChannel(user: $user, channel: $channel) {\n    _id\n    name\n    private\n    server{\n      _id\n      name\n    }\n    members{\n      _id\n      username\n      profilePicture\n    }\n    }\n}\n`;\n\nexport const CREATE_SERVER = gql`\nmutation createNewServer($name: String!, $ownerID: ID!, ) {\n   createNewServer(name: $name, ownerID: $ownerID) {\n    _id\n    name\n   channels{\n    _id\n    name\n  }\n    createdAt\n    location{\n      latitude\n     longitude\n    }\n    }\n}\n`;\n\nexport const DELETE_MSG = gql`\nmutation deleteAMessage($messageID: ID!) {\n    deleteAMessage(messageID:$messageID) {\n    _id\n  }\n}\n`;","import { ExclamationIcon } from '@heroicons/react/solid'\n\nexport default function LoginAlert() {\n    return (\n        <div className=\"rounded-md bg-red-500 p-4\">\n            <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                    <ExclamationIcon className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-white\">Login Failed!</h3>\n                    <div className=\"mt-2 text-sm text-white\">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Header from '../components/Header'\nimport LoginAlert from '../components/Alerts/login';\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState }\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <>\n      <Header></Header>\n      <div className=\"h-full bg-gray-800 flex sm:p-4\">\n        <div className=\"flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n          <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n            <div>\n\n              <h2 className=\"mt-6 text-3xl font-extrabold text-gray-100\">LOGIN</h2>\n              {error && <LoginAlert></LoginAlert>}\n\n              <div className=\"mt-6\">\n                <form onSubmit={handleFormSubmit}>\n\n\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                      Email\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        placeholder='Your email'\n                        name='email'\n                        type='email'\n                        id='email'\n                        value={formState.email}\n                        onChange={handleChange}\n                        required\n                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-1\">\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                      Password\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        placeholder='******'\n                        name='password'\n                        type='password'\n                        id='password'\n                        value={formState.password}\n                        onChange={handleChange}\n                        required\n                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      />\n                    </div>\n                  </div>\n\n\n\n                  <div>\n                    <button\n                      type=\"submit\"\n                      className=\"w-full mt-5 flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      Sign in\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hidden lg:block relative w-0 flex-1\">\n          <img\n            className=\"absolute inset-0 h-full w-full object-cover\"\n            src=\"https://images.unsplash.com/photo-1505904267569-f02eaeb45a4c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1908&q=80\"\n            alt=\"\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;","import { gql } from '@apollo/client';\n\n\nexport const QUERY_USERS = gql`\nquery {\n    users{\n        _id\n        username\n        email\n        profilePicture\n        friendCount\n        online\n            location{\n                latitude\n                longitude\n            }\n            friends{\n                username\n            }\n            messages{\n                _id\n            }\n            servers{\n                _id\n                ownerID\n                name\n            channels{\n                _id\n              members{\n                _id\n                username\n                profilePicture\n              }\n                private\n            }\n        }\n    }\n}\n`;\n\nexport const QUERY_ME = gql`\nquery {\n    me{\n        _id\n        username\n      UsersInRange{\n        username\n        online\n        servers{\n          _id\n          ownerID\n          channels{\n            _id\n            name\n            private\n            members{\n              _id\n              username\n            }\n          }\n        }\n      }\n        friendCount\n            location{\n                latitude\n                longitude\n            }\n            friends{\n              \t_id\n                username\n              servers{\n                _id\n                name\n                channels{\n                  _id\n                  private\n                }\n              }\n              location{\n                latitude\n                longitude\n              }\n            }\n            servers{\n                _id\n                name\n            channels{\n                _id\n      \t\t\t\t\tname\n                private\n              \tmessages{\n                  _id\n                  username\n                  text\n                  time\n                }\n              \tmembers{\n                  _id\n                  username\n                  profilePicture\n                }\n\n            }\n        }\n    }\n}\n`;\n\nexport const QUERY_ME_BASIC = gql`\n{\n    me {\n    _id\n    username\n    email\n    friendCount\n    friends {\n        _id\n        username\n    }\n    }\n}\n`;\n\nexport const QUERY_GLOBAL_MESSAGES = gql`\nquery{\n  allMessages{\n    _id\n    channels{\n      _id\n      name\n    }\n    text\n    time\n    username\n  }\n}\n`;\n\nexport const QUERY_CHANNELS = gql`\n query{\n  chatRooms{\n    _id\n    name\n    private\n    server{\n      _id\n      name\n    }\n    messages{\n      _id\n      username\n      text\n      time\n    }\n    members{\n      _id\n      username\n      profilePicture\n    }\n  }\n}\n`;\n\nexport const QUERY_SERVERS = gql`\nquery{\n  servers{\n    _id\n    name\n    ownerID\n    channels{\n      _id\n      name\n      private\n      messages{\n        _id\n        username\n        text\n        time\n      }\n      members{\n        _id\n        username\n        profilePicture\n      }\n    }\n    location{\n      latitude\n      longitude\n    }\n  }\n}\n`;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import { USE_QUERY } from '@apollo/client'\n\n\nconst FriendList = ({ friendCount, username, friends }) => {\n    if (!friends || !friends.length) {\n        return <p className=\"bg-dark text-light p-3\">{username}, make some friends!</p>;\n    }\n\n    return (\n        <div>\n            <h5>\n                {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\n            </h5>\n            {friends.map(friend => (\n                <button className=\"btn w-100 display-block mb-2\" key={friend._id}>\n                    <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\n                </button>\n            ))}\n        </div>\n    );\n};\n\nexport default FriendList;","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery /*, useMutation*/ } from '@apollo/client';\nimport { QUERY_USERS, QUERY_ME } from '../utils/queries';\n// import { ADD_FRIEND } from '../utils/mutations';\n// import ThoughtList from '../components/ThoughtList';\nimport FriendList from '../components/FriendList';\n//mport ThoughtForm from '../components/ThoughtForm';\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n\n  // const [addFriend] = useMutation(ADD_FRIEND);\n  const { username: userParam } = useParams();\n\n\n  const { loading, data } = useQuery(userParam ? QUERY_USERS : QUERY_ME, {\n    variables: { username: userParam }\n\n  });\n\n  console.log(data)\n\n  const user = data?.me || data?.user || {};\n  // const handleClick = async () => {\n  //   try {\n  //     await addFriend({\n  //       variables: { id: user._id }\n  //     });\n  //   } catch (e) {\n  //     console.error(e);\n  //   }\n  // };\n\n  console.log(userParam)\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/profile\" />;\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this page. Use the navigation links above to sign up or log in!\n      </h4>\n    );\n  }\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"bg-dark text-secondary p-3 display-inline-block\">\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n\n        </h2>\n\n        {/* {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            Add Friend\n          </button>\n        )} */}\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          {/* <ThoughtList thoughts={user.thoughts} title={`${user.username}'s thoughts...`} /> */}\n        </div>\n\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FriendList\n            username={user.username}\n            friendCount={user.friendCount}\n            friends={user.friends}\n          />\n        </div>\n      </div>\n      {/* <div className=\"mb-3\">{!userParam && <ThoughtForm />}</div> */}\n    </div>\n  );\n};\n\nexport default Profile;","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { validateEmail } from '../utils/helpers';\nimport createError from '../components/Alerts/Sign-up/createError'\nimport Header from '../components/Header'\nexport default function Example() {\n  const [formState, setFormState] = useState({ username: '', email: '', password: '' });\n  const [addUser, { error }] = useMutation(ADD_USER);\n  const [userError, setUserError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [signUpError, setAlert] = useState('')\n  // update state based on form input changes\n\n  // useEffect(() => {\n\n  // })\n\n  const handleChange = (e) => {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setEmailError('Your email is invalid.');\n      } else {\n        setEmailError('');\n      }\n    } else if (e.target.name === 'username') {\n      if (e.target.value.length < 2) {\n        setUserError(`Username's must be at least 2 characters!`)\n      } else {\n        setUserError('')\n      }\n    } else if (e.target.name === 'password') {\n      if (e.target.value.length < 6) {\n        setPasswordError(`Password's must be at least 5 characters!`)\n      } else {\n        setPasswordError(``)\n      }\n    }\n\n  };\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      // execute addUser mutation and pass in variable data from form\n      const { data } = await addUser({\n        variables: { ...formState }\n      });\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.log(e);\n      setAlert(true)\n      setTimeout(() => {\n        setAlert('')\n      }, 9000)\n    }\n  };\n  return (\n    <>\n      <Header></Header>\n\n      <div className=\"h-full bg-gray-800 flex sm:p-4\">\n\n        <div className=\"flex-1 flex flex-col justify-center py-12 px-4 sm:px-6 lg:flex-none lg:px-20 xl:px-24\">\n          <div className=\"mx-auto w-full max-w-sm lg:w-96\">\n            <div>\n              {signUpError && createError()}\n              <h2 className=\"mt-6 text-3xl font-extrabold text-gray-100\">Create an account</h2>\n              {error && <div className='py-3 text-red-500'>{error.message}</div>}\n\n              <div className=\"mt-6\">\n                <form onSubmit={handleFormSubmit}>\n                  <div>\n                    <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\n                      User Name\n\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        placeholder='Your username'\n                        name='username'\n                        type='username'\n                        id='username'\n                        value={formState.username}\n                        onChange={handleChange}\n                        required\n                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      />\n                    </div>\n                    {userError && (<div className='py-3 text-red-500'>{userError}</div>)}\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                      Email\n\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        placeholder='Your email'\n                        name='email'\n                        type='email'\n                        id='email'\n                        value={formState.email}\n                        onChange={handleChange}\n                        required\n                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      />\n                    </div>\n                    {emailError && (<div className='py-3 text-red-500'>{emailError}</div>)}\n                  </div>\n\n                  <div className=\"space-y-1\">\n                    <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                      Password\n\n                    </label>\n                    <div className=\"mt-1\">\n                      <input\n                        placeholder='******'\n                        name='password'\n                        type='password'\n                        id='password'\n                        value={formState.password}\n                        onChange={handleChange}\n                        required\n                        className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                      />\n                    </div>\n                    {passwordError && (<div className='py-3 text-red-500'>{passwordError}</div>)}\n                  </div>\n\n\n\n                  <div>\n                    <button\n                      type=\"submit\"\n                      className=\"w-full mt-5 flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      Create Account\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"hidden lg:block relative w-0 flex-1\">\n          <img\n            className=\"absolute inset-0 h-full w-full object-cover\"\n            src=\"https://images.unsplash.com/photo-1505904267569-f02eaeb45a4c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1908&q=80\"\n            alt=\"\"\n          />\n        </div>\n      </div>\n    </>\n  )\n}","export function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}","import { ExclamationIcon } from '@heroicons/react/solid'\n\nexport default function createError() {\n    return (\n        <div className=\"rounded-md bg-red-500 p-4\">\n            <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                    <ExclamationIcon className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-white\">Server Error!!</h3>\n                    <div className=\"mt-2 text-sm text-white\">\n                        <p>\n                            Sorry, we already have a user with that email address!\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { useState } from 'react';\n// import { useMutation } from '@apollo/client';\nimport { } from '../../utils/mutations';\n// import { QUERY_ME } from '../../utils/queries';\nconst MessageForm = ({ socket, data }) => {\n\n    const [value, setText] = useState('');\n    const [characterCount, setCharacterCount] = useState(0);\n\n    const handleChange = event => {\n        if (event.target.value.length <= 280) {\n            setText(event.target.value);\n            setCharacterCount(event.target.value.length);\n        }\n    };\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n        const userName = data.me.username;\n\n\n        const messageData = {\n            value: value,\n            username: userName,\n            id: data.me._id\n        }\n        socket.emit('message', messageData);\n        socket.emit('messagePublic', messageData);\n        console.log(characterCount)\n        try {\n            // console.log(messageData)\n            // clear form value\n            setText('');\n            setCharacterCount(0);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    return (\n        // <div>\n        //     <p className={`m-0 ${characterCount === 280 /*|| error ? 'text-error' : ''*/}`}>\n        //         Character Count: {characterCount}/280\n        //         {/* {error && <span className=\"ml-2\">Something went wrong...</span>} */}\n        //     </p>\n        //     <form\n        //         className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        //         onSubmit={handleFormSubmit}\n        //     >\n        //         <textarea\n        //             placeholder=\"Be Polite\"\n        //             value={value}\n        //             className=\"form-input col-12 col-md-9\"\n        //             onChange={handleChange}\n        //         ></textarea>\n        //         <button className=\"btn col-12 col-md-3\" type=\"submit\">\n        //             Submit\n        //         </button>\n        //     </form>\n        // </div>\n        <div className=\" w-full bg-gray-100 sm:rounded-lg\">\n            <div className=\"px-4 py-5 sm:p-6\">\n                <form className=\"mt-1 font-medium flex items-center justify-around\">\n                    <div className=\"w-full\">\n                        <input\n                            placeholder=\"Message\"\n                            value={value}\n                            className=\"bg-gray-400 shadow-sm block w-full sm:text-sm py-2 border border-indigo-600 rounded\"\n                            onChange={handleChange}\n                        ></input>\n                    </div>\n                    <button\n                        onClick={handleFormSubmit}\n                        type=\"submit\"\n                        className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                    >\n                        Send\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default MessageForm;","/* This example requires Tailwind CSS v2.0+ */\n\nexport default function CurrentUserCard({ message }) {\n    // CURRENT USER MESSAGE CARD\n    return (\n        <>\n            <div key={message.value} className=\"flex justify-end mb-4\">\n                <div\n                    className=\"mr-2 py-3 px-4 bg-indigo-400 rounded-bl-3xl rounded-tl-3xl rounded-tr-xl text-white shadow-inner\">\n                    {message.value}\n                </div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n            </div>\n            <div className=\"mr-4 flex flex-row justify-end flex-wrap\">\n                <span id='sent'\n                    className=\"w-15 px-5 py-1 h-8 flex flex-wrap justify-end text-sm text-end font-medium text-gray-400 rounded-full\">{new Date(message.time).toLocaleTimeString()}\n                </span>\n            </div>\n        </>\n    )\n}\n\n","/* This example requires Tailwind CSS v2.0+ */\n\nexport default function OtherUsersCard({ message }) {\n    // CURRENT USER MESSAGE CARD\n    return (\n        <>\n            <div className=\"flex justify-start mb-1\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <div\n                    className=\"ml-2 py-3 px-4 bg-yellow-200 rounded-br-3xl rounded-tr-3xl rounded-tl-xl text-gray-500 shadow-inner\">\n                    {message.value}\n                </div>\n            </div>\n            <div className=\"mr-l flex flex-row justify-start flex-wrap\">\n                <span id='sent'\n                    className=\"w-15 px-5 py-1 h-8 flex flex-wrap justify-start text-sm text-start font-medium   text-gray-400 rounded-full\">\n                    {new Date(message.time).toLocaleTimeString()}\n                </span>\n            </div>`\n        </>\n    )\n}\n\n","import React, { useEffect, useState } from 'react';\nimport CurrentUserCard from './currentUserCard';\nimport OtherUsersCard from './otherMessageCard';\n\nconst Messages = ({ socket, data }) => {\n    const [messages, setMessages] = useState([]);\n\n    useEffect(() => {\n        const messageListener = (message) => {\n\n            setMessages((prevMessages) => {\n                const newMessages = { ...prevMessages };\n                newMessages[message.id] = message;\n                return newMessages;\n            });\n        };\n\n        const deleteMessageListener = (messageID) => {\n            setMessages((prevMessages) => {\n                const newMessages = { ...prevMessages };\n                delete newMessages[messageID];\n                return newMessages;\n            });\n        };\n\n        socket.on('message', messageListener);\n        socket.on('messagePublic', messageListener);\n        socket.on('deleteMessage', deleteMessageListener);\n        socket.emit('getMessages');\n\n        return () => {\n            socket.off('message', messageListener);\n            socket.off('messagePublic', messageListener);\n            socket.off('deleteMessage', deleteMessageListener);\n        };\n    }, [socket, data]);\n\n    return (\n        <>\n            <div className=\"w-full\">\n                <div className=\"text-center\">\n                    <span className=\"text-2xl p-3 block text-base text-center text-white font-semibold tracking-wide uppercase\">\n                        Global Chat\n                    </span>\n                </div>\n                <div className=\"w-full\">\n                    {messages && data ?\n                        [...Object.values(messages)]\n                            .sort((a, b) => a.time - b.time)\n                            .map((message) => (\n                                message.user.id === data.me._id ?\n                                    <> <CurrentUserCard key={message.id} message={message}></CurrentUserCard>\n                                    </>\n                                    : <><OtherUsersCard key={message.time} message={message}></OtherUsersCard></>\n                            )) : `No Messages!`\n                    }\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Messages;\n\n/* <div key={message.id}\n\n                                    className=\"relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                                ><div className=\" w-full flex-row justify-start\">\n\n\n                                        <div className=\"w-1/6 flex-row justify-start\">\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                                            </svg>\n                                            <span className='w-4/6'><p className=\" italic text-md font-medium text-black\">{message.user.name}</p></span>\n\n                                        </div>\n                                        <div className=\"ml-7 w-full\">\n                                            <ul className='w-full'>\n                                                <li className=\"ml-5 text-sm text-black w-full\">\n                                                    <p >{message.value}</p>\n                                                </li>\n                                                <li className='w-full text-sm text-gray-400 text-right pr-4'>\n                                                    {new Date(message.time).toLocaleTimeString()}\n                                                </li>\n                                            </ul>\n\n                                        </div>\n                                    </div>\n\n                                </div> */","import React, { useEffect, useState } from 'react';\nimport { io } from \"socket.io-client\";\nimport MessageForm from '../components/MessageForm';\nimport Messages from '../components/Messages';\nimport Auth from '../utils/auth';\nimport Header from '../components/Header'\n\nconst Test = () => {\n  const [socket, setSocket] = useState(null);\n  const loggedIn = Auth.loggedIn();\n  useEffect(() => {\n    const newSocket = io(`http://${window.location.hostname}:8080`);\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [setSocket]);\n\n  return (\n    <main>\n      <Header />\n      {loggedIn && (<div className=\"flex-row justify-space-between\">\n        <h1>**THIS IS A TEST ** Global Chat</h1>\n\n        {socket ? (<div><Messages socket={socket} />\n          <MessageForm socket={socket}>  </MessageForm></div>) : `Not connected!`}\n\n      </div>)}\n    </main>\n  );\n};\n\nexport default Test;","import React  /*{ useEffect, useState }*/ from 'react';\n// import { useQuery, useMutation } from '@apollo/client';\n// import { io, socket } from \"socket.io-client\";\n// import { QUERY_ME } from '../../utils/queries';\n\n\nconst UserList = ({ data, loading }) => {\n    // const [socket, setSocket] = useState(false);\n    // useEffect(() => {\n    //     const newSocket = io(`http://${window.location.hostname}:8080`);\n    //     setSocket(newSocket);\n    //     return () => newSocket.close();\n    // }, [setSocket]);\n\n    while (data?.me.UsersInRange.length === 0) {\n        return <h1 className='p-1 text-red-500'>No active users!</h1>\n    }\n    if (loading) {\n        return <h1>Loading please wait...</h1>\n    }\n    return (\n        <>\n            {data && data.me.UsersInRange && data.me.UsersInRange.map((el, idx) => (\n                <div key={el.username + idx}>\n                    <ul key={el._id} className=\"mt-3 grid grid-cols-1 gap-5 sm:gap-6 \">\n                        <li key={el++} className=\"col-span-1 flex shadow-sm rounded-md\">\n                            <div key={Date.now()} className=\"flex-shrink-0 flex items-center justify-center w-16 bg-pink-600 text-white text-sm font-medium rounded-l-md\">\n                                {/* MAKE FUNCTION THAT grabs user initials*/}\n                                {el ? `PRO` : null}\n                            </div>\n                            <div key={el + idx} className=\"flex-1 flex items-center justify-between border-t border-r border-b border-gray-200 bg-white rounded-r-md truncate\">\n                                <div key={el.username + idx} className=\"flex-1 px-4 py-2 text-sm truncate\">\n                                    <a key={`link` + idx} href=\"/\" className=\"text-gray-900 font-medium hover:text-gray-600\">{el.username}</a>\n                                    <p key={el.online[0] + el.username} className=\"text-gray-500\">{el.online[0] ? `Online` : `Offline`}</p>\n                                </div>\n                                <div key={idx + idx} className=\"flex-shrink-0 pr-2\">\n                                    <button key={'button' + el.name + idx} className=\"w-8 h-8 bg-white inline-flex items-center justify-center text-gray-400 rounded-full bg-transparent hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                        <span className=\"sr-only\">{el ? `Open options` : null}</span>\n                                        <svg className=\"w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                            <path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" />\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            ))}\n        </>\n    );\n}\n\nexport default UserList;","import React, { useEffect, useState } from 'react';\n// import { useQuery, useMutation } from '@apollo/client';\nimport { io } from \"socket.io-client\";\nimport MessageForm from '../MessageForm';\nimport Messages from '../Messages';\nimport Auth from '../../utils/auth';\n\n\n// import { QUERY_CHANNELS, QUERY_ME } from '../utils/queries';\n\n\nconst Public = ({ data }) => {\n    const [socket, setSocket] = useState(null);\n    const loggedIn = Auth.loggedIn();\n    useEffect(() => {\n        const newSocket = io(`http://${window.location.hostname}:8080`);\n        setSocket(newSocket);\n        return () => newSocket.close();\n    }, [setSocket]);\n\n    // const onMessage = (content) => {\n    //   if (this.selectedUser) {\n    //     socket.emit(\"private message\", {\n    //       content,\n    //       to: this.selectedUser.userID,\n    //     });\n    //     this.selectedUser.messages.push({\n    //       content,\n    //       fromSelf: true,\n    //     });\n    //   }\n    // }\n\n    return (\n\n        <>\n            {loggedIn && (\n                <div className=\"w-full p-1 h-full \">\n                    {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n                    <div className=\"w-full h-4/5 \">\n                        <ul key={socket}>{socket ? (\n                            <li ><Messages socket={socket} data={data} /></li>\n                        ) : `Not connected!`}\n                        </ul>\n                    </div>\n                    <div className=\"w-full\">\n                        {socket ? (\n                            <div><MessageForm socket={socket} data={data}></MessageForm></div>\n                        ) : `Not connected!`}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Public;","\n// import { Redirect, useParams } from 'react-router-dom';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport UserList from '../components/UserList';\nimport { LOGOUT_USER } from '../utils/mutations';\nimport { QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { useQuery, useMutation } from '@apollo/client';\nimport Public from '../components/GlobalChat'\n// import Header from \"../components/Header\"\nimport {\n    CalendarIcon,\n    FolderIcon,\n    HomeIcon,\n    InboxIcon,\n    UsersIcon,\n    LogoutIcon,\n    GlobeAltIcon,\n} from '@heroicons/react/outline'\n\n\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function Dashboard() {\n    const [logout] = useMutation(LOGOUT_USER);\n    const { error, data, loading } = useQuery(QUERY_ME);\n\n    const _id = () => {\n        if (data !== undefined) return data.me._id\n    }\n    async function handleLogout(e) {\n        e.preventDefault();\n        const offline = await logout({ variables: { user_id: _id() } });\n        if (offline) {\n            Auth.logout()\n        }\n        if (error) {\n            console.log(error)\n        }\n\n    }\n\n    const navigation = [\n        { name: '', href: '', icon: GlobeAltIcon, current: true },\n        { name: '', href: '/', icon: HomeIcon, current: false },\n        { name: '', href: '', icon: UsersIcon, current: false },\n        { name: '', href: '', icon: FolderIcon, current: false },\n        { name: '', href: '', icon: CalendarIcon, current: false },\n        { name: '', href: '', icon: InboxIcon, current: false },\n\n    ];\n\n\n    return (\n        <>\n            <div className=\"h-screen flex overflow-hidden bg-gray-100\">\n\n                {/* Static sidebar for desktop */}\n                <div className=\"h-full md:flex md:flex-shrink-0\">\n                    <div className=\"h-full flex flex-col w-20 \">\n                        {/* Sidebar component, swap this element with another sidebar if you like */}\n                        <div className=\" h-full flex flex-col \">\n                            <div className=\"flex items-center h-16 flex-shrink-0 px-4 bg-gray-900\">\n                                <Link to=\"/\">\n                                    <span className=\"sr-only\">Proximo</span>\n                                    <img\n                                        // INSERT ICON HERE\n                                        className=\"h-10 w-auto\"\n                                        src=\"https://tailwindui.com/img/logos/workflow-mark.svg?color=white\"\n                                        alt=\"\"\n                                    />\n                                </Link>\n                            </div>\n                            <div className=\" h-full flex-1 flex flex-col overflow-y-auto\">\n                                <nav className=\"h-full px-2 py-4 bg-gray-800 space-y-1\">\n                                    {navigation.map((item, idx) => (\n                                        <Link\n                                            key={idx}\n                                            to={item.href}\n                                            className={classNames(\n                                                item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                                                'group flex items-center px-2 py-2 text-sm font-medium rounded-md'\n                                            )}\n                                        >\n                                            <item.icon\n                                                className={classNames(\n                                                    item.current ? 'text-gray-300' : 'text-gray-400 group-hover:text-gray-300',\n                                                    'mr-3 flex-shrink-0 h-6 w-6'\n                                                )}\n                                                aria-hidden=\"true\"\n                                            />\n                                            {item.name}\n                                        </Link>\n                                    ))}\n                                    <a\n                                        href=\"/\"\n                                        onClick={handleLogout}\n                                        className={classNames(\n                                            'text-gray-300 hover:bg-gray-700 hover:text-white',\n                                            'group flex items-center px-2 py-2 text-sm font-medium rounded-md'\n                                        )}\n                                    >\n                                        <LogoutIcon\n                                            className={classNames(\n                                                'text-gray-400 group-hover:text-gray-300',\n                                                'mr-3 flex-shrink-0 h-6 w-6'\n                                            )}\n                                            aria-hidden=\"true\"\n                                        />\n\n                                    </a>\n\n                                </nav>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <>\n                    {data ?\n                        <div className=\"flex flex-row w-full flex-1 overflow-hidden\">\n                            <main className=\" w-full min-h-screen justify-center\">\n                                <div className=\"grid grid-cols-6 w-full bg-gray-600 h-screen flex-row\">\n                                    {/* SIDE PANEL  */}\n                                    <div className=\"bg-gray-700  col-start-1 col-end-7 md:col-span-1 md:h-auto flex-row justify-center p-2\">\n                                        <h1 className=\"text-2xl font-semibold text-gray-900 text-center\">Proximo</h1>\n                                        {!data ? <p className='p-1'>No Active Users!</p> : loading ? <p>LOADING PLEASE WAIT</p> : <UserList key={'userList' + data.me.username} data={data} loading={loading}></UserList>}\n\n                                    </div>\n                                    {/* MAIN CHAT AREA */}\n                                    <div className=\"col-span-6 col-start-1 col-end-7  md:col-start-2 flex-row justify-center p-1 h-full\">\n                                        {/* Replace with your content */}\n                                        {/* <div className=\"py-4 px-0\">\n                                    <div className=\" bg bg-gray-500 h-96\" />\n                                </div> */}\n                                        <Public data={data} className='h-screen overflow-auto'></Public>\n                                        {/* /End replace */}\n                                    </div>\n                                </div>\n                            </main>\n                        </div> : null}\n                </>\n\n            </div>\n        </>\n    )\n}","import React, { useEffect, useState } from 'react';\n// import { useQuery, useMutation } from '@apollo/client';\nimport { io } from \"socket.io-client\";\nimport MessageForm from '../components/MessageForm';\nimport Messages from '../components/Messages';\nimport Auth from '../utils/auth';\nimport UserList from '../components/UserList';\n\n// import { QUERY_CHANNELS, QUERY_ME } from '../utils/queries';\nimport Header from '../components/Header'\n\nconst Public = () => {\n  const [socket, setSocket] = useState(null);\n  const loggedIn = Auth.loggedIn();\n  useEffect(() => {\n    const newSocket = io(`http://${window.location.hostname}:8080`);\n    setSocket(newSocket);\n    return () => newSocket.close();\n  }, [setSocket]);\n\n  // const onMessage = (content) => {\n  //   if (this.selectedUser) {\n  //     socket.emit(\"private message\", {\n  //       content,\n  //       to: this.selectedUser.userID,\n  //     });\n  //     this.selectedUser.messages.push({\n  //       content,\n  //       fromSelf: true,\n  //     });\n  //   }\n  // }\n\n  return (\n    <main>\n      <Header />\n      <UserList />\n      {loggedIn && (\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 min-h-screen bg-gray-100\">\n          {/* We've used 3xl here, but feel free to try other max-widths based on your needs */}\n          <div className=\"max-w-3xl mx-auto\">\n            <ul>{socket ? (\n              <li><Messages socket={socket} /></li>\n            ) : `Not connected!`}\n            </ul>\n          </div>\n          <div className=\"max-w-3xl mx-auto\">\n            {socket ? (\n              <div><MessageForm socket={socket}></MessageForm></div>\n            ) : `Not connected!`}\n          </div>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default Public;\n","import React from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { setContext } from '@apollo/client/link/context';\n// import Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport Test from './pages/Test';\nimport Dashboard from './pages/Dashboard'\nimport Public from './pages/Public';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"w-full h-screen flex-row justify-center\">\n\n          <div className=\"w-full h-auto flex-row \">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/public\" component={Public} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/profile/:username?\" component={Profile} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n          </div>\n        </div>\n\n\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}